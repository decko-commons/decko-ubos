developer=http://grasscommons.org/
url=https://decko.org/
maintainer=${developer}
pkgname=decko
pkgver=0.11.7
pkgrel=1
pkgdesc="A wiki approach to structured data and web design"
arch=('any')
license=("GPL")
source=("https://github.com/decko-commons/decko/archive/v${pkgver}.zip")
depends=(
  'ruby2.7'
  'mod_passenger27'
  'mariadb-clients'
  'imagemagick'
  'nodejs'
  'memcached'
  'mod_xsendfile'
  'smtp-server'
)
options=('!strip')
sha512sums=('855f2d28d59a54e607892b62f29be555ed6b5a8d5ea08bbecce08218f2e9cc500fddf28a03f1e0d6af5299a521f0c1ba3dac5413b922f8133252e780e549a14d')

_patchRakeCommand() {
    cd $1
    ls -al lib/decko/commands/rake_command.rb

    patch -p0 < ${startdir}/rake_command_run_bundle-27.patch
    ls -al lib/decko/commands/rake_command.rb
}

prepare() {
  _patchRakeCommand "${srcdir}/decko-${pkgver}/decko"
}

build() {
  cd ${srcdir}/decko-${pkgver}
  cp -a ${startdir}/{.bundle,Gemfile,Gemfile.lock} .
  HOME=$(pwd) bundle-2.7 install;
  ls -al decko/lib/decko/commands/rake_command.rb

  # Remove log files
  logs=$(find . -name gem_make.out -or -name mkmf.log)
  if [[ $logs ]]; then
    rm $logs
  fi

  # Strip binaries
  libs=$(find . -name '*.so' -or -name '*.o')
  if [[ $libs ]]; then
    strip $libs
  fi

  _patchRakeCommand "${srcdir}/decko-${pkgver}/gems/ruby/2.7.0/gems/decko-${pkgver}"
}

package() {
# Manifest
  install -D -m0644 ${startdir}/ubos-manifest.json ${pkgdir}/ubos/lib/ubos/manifests/${pkgname}.json

# Icons
  install -D -m0644 ${startdir}/appicons/{72x72,144x144}.png -t ${pkgdir}/ubos/http/_appicons/${pkgname}/

# Data directory
  mkdir -p ${pkgdir}/ubos/lib/${pkgname}

# Code -- be selective in what we package
  mkdir -p ${pkgdir}/ubos/share/${pkgname}/

# From $startdir
  toCopy=(
    'ubos_cards.pl'
    'ubos_logging.pl'
    'tmpl'
  )
  for t in ${toCopy[@]}; do
    from="${startdir}/${t}"
    to="${pkgdir}/ubos/share/${pkgname}/${t}"
    todir=$(dirname $to)
    [[ -d ${todir} ]] || mkdir -p -m 755 ${todir}
    cp -a ${from} ${todir}/
  done

# From $srcdir:
  toCopy=(
    'gems'
    'Gemfile'
    'Gemfile.lock'
  )

  for t in ${toCopy[@]}; do
    from="${srcdir}/decko-${pkgver}/${t}"
    to="${pkgdir}/ubos/share/${pkgname}/${t}"
    todir=$(dirname $to)
    [[ -d ${todir} ]] || mkdir -p -m 755 ${todir}
    cp -a ${from} ${todir}/
  done

# Systemd
  install -D -m0644 ${startdir}/systemd/*.service -t ${pkgdir}/usr/lib/systemd/system/

# Logging
  mkdir -p -m755 ${pkgdir}/ubos/log

# License
  install -D -m644 ${startdir}/LICENSE -t ${pkgdir}/usr/share/licenses/${pkgname}/
}
